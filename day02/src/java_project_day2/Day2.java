package java_project_day2;

public class Day2 {

	/*
	 * [제어문]
	 * - 코드 실행을 개발자가 원하는 방향으로 할 수 있도록 한다.
	 * (1) 조건문 (if문, switch문) 
	 * -조건에 따라 여러개의 실행경로 중 하나를 선택
	 * 
	 * ======= if문 =======
	 * 1- 단일if문
	 * if(조건식)   조건식이 true면 실행문1 -> 실행문2
	 * 	실행문1;	        false면 실행문2 실행
	 * 실행문2;
	 * 
	 * 2- if~else문
	 * if(조건식)	  조건식이 true면 실행문1 -> 실행문3
	 * 	실행문1;	  		false면 실행문2 -> 실행문3
	 * else
	 * 	실행문2;
	 * 실행문3;
	 * 
	 * 3- if ~ else if문
	 * if (조건식)		조건식이 true면 실행문1
	 * 	실행문1;			조건식1이 false고 조건식2가 true면 실행문2 
	 * else if (조건식2)	조건식1,2가 false고 조건식3이 true면 실행문3
	 * 	실행문2;			조건식이 모두 false면 실행문4
	 * else if (조건식3)
	 * 	실행문3;
	 * else
	 * 	실행문4;
	 * 
	 * 4- 중첩if문
	 * if(조건식){			조건문1이 true면 실행문1
	 * 		실행문1			조건문1이 false면 else로 가서
	 * }else {				조건식2 확인 
	 * 		if(조건식2){		조건식2가 true면 실행문2
	 * 			실행문2		조건식2가 false면 실행문3
	 * 		}else {
	 * 			실행문3
	 * 
	 * 
	 * =======switch ~ case문========
	 * -각 조건에 따라 실행되어야하는 코드가 다를때 사용
	 * -case에는 변수 사용X, 수식(a>3) 사용X
	 * switch (값){
	 * 	case 값1:		값과 case1이 같다면 실행문1 실행 후 멈춤
	 * 		실행문1;
	 * 		break;
	 * 	case 값2:		값과 case2가 같다면 실행문2 실행 후 멈춤
	 * 		실행문2;
	 * 		break;
	 * 	default:		값과 모든 case가 다르다면 실행문3
	 * 		실행문3
	 * }
	 * 
	 * 
	 * 
	 * 
	 * 
	 * (2) 반복문 (for문, while문, do-while문)
	 * - 조건에 따라 여러 개의 같은 처리를 반복
	 * - 반복문을 구성하는 것 
	 * 	1- 초기값
	 *  2- 반복 횟수를 결정하는 조건식
	 *  3- 반복 실행문
	 *  4- 증감식
	 * 
	 * ============for문==========
	 * 
	 * for(초기갑;조건식;증감식){
	 * 	실행문;
	 * }
	 * 초기값이 증감식으로 증감하며 조건식이 false일때까지 실행문 실행
	 * 
	 * ex)
	 * int sum = 0;
	 * for(int i = 1; i <= 10; i++{
	 * 		sum += i;
	 * }
	 *  ==> 1부터 10까지 정수의 합
	 * 
	 * 
	 * 
	 * 
	 * ============while문=========
	 * - 조건이 만족하는 동안 특정 문장을 수행
	 * - 증감식 꼭 필요함
	 * 
	 * 변수선언or초기화;
	 * while(조건식){
	 * 		실행문;
	 * 		증감식;
	 * }
	 * 
	 * int i = 1;
	 * sysout("정수:");
	 * while(i<=5) {
	 * 		sysout (i + " ");
	 * 		i++;
	 * }
	 * sysout();
	 * ==> 1부터 5까지 출력
	 * 
	 * 
	 * 
	 * 
	 * 
	 * =============do while문=======
	 * - 반복문을 먼저 수행하고 조건을 나중에 확인한다
	 * - 조건을 무조건 한 번 이상 실행
	 * 
	 * 변수선언or초기값;
	 * do{ 
	 * 		실행문;
	 * 		증감식;
	 * }while (조건식);
	 * 
	 * 

	 * 
	 * 
	 * (3) 보조제어문(분기문)(break문, continue문, return문)
	 * 
	 * 1- break
	 * 반복문이나 switch문의 case를 벗어날 때 사용
	 * 가장 가까운 반복문만 종료한다
	 * 바깥쪽 반복문까지 종료시키려면 반복문에 이름(Label)붙이고
	 *  "break이름;"사용
	 * 
	 * Label: for(...){
	 * 		for(...){
	 * 			if(조건식)
	 * 				break Label;
	 * 		}
	 * }
	 * 
	 * 
	 * 
	 * 2- continue문
	 * while문, do~while문의 조건식으로 가게 함
	 * for문의 증감식으로 가게 함
	 * 반복 중 특정값의 처리를 제외할 때
	 * for(...){
	 * 		if(조건식)
	 * 		continue;
	 * }
	 * 
	 * while(...){
	 * 		if(조건식)
	 * 		continue;
	 * }
	 * 
	 * 
	 * 3- return문
	 * 메서드에서 특정값을 리턴값으로 보내고 싶을 때 사용
	 * 
	 *
	 * 
	 * 
	 * 
	 */
}
